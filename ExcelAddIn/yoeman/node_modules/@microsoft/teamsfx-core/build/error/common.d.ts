import { SystemError, UserError } from "@microsoft/teamsfx-api";
export declare class FileNotFoundError extends UserError {
    constructor(source: string, filePath: string, helpLink?: string);
}
export declare class MissingEnvironmentVariablesError extends UserError {
    constructor(source: string, variableNames: string, filePath?: string, helpLink?: string);
}
export declare class InvalidActionInputError extends UserError {
    constructor(actionName: string, parameters: string[], helpLink?: string);
}
export declare class InvalidProjectError extends UserError {
    constructor();
}
export declare class JSONSyntaxError extends UserError {
    constructor(filePathOrContent: string, e: Error);
}
export declare class ReadFileError extends SystemError {
    constructor(e: Error, source?: string);
}
export declare class UnhandledError extends SystemError {
    constructor(e: Error, source?: string);
}
export declare class UnhandledUserError extends UserError {
    constructor(e: Error, source?: string, helpLink?: string);
}
export declare class InstallSoftwareError extends UserError {
    constructor(source: string, nameAndVersion: string, helpLink?: string);
}
export declare class MissingRequiredInputError extends UserError {
    constructor(name: string);
}
export declare class InputValidationError extends UserError {
    constructor(name: string, reason: string);
}
export declare class NoEnvFilesError extends UserError {
    constructor(source: string);
}
//# sourceMappingURL=common.d.ts.map