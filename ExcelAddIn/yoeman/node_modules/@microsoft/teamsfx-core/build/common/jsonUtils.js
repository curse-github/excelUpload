"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.jsonUtils = exports.JSONUtils = void 0;
const tslib_1 = require("tslib");
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const common_1 = require("../error/common");
const fs_extra_1 = tslib_1.__importDefault(require("fs-extra"));
class JSONUtils {
    parseJSON(content) {
        try {
            const obj = JSON.parse(content);
            return teamsfx_api_1.ok(obj);
        }
        catch (e) {
            if (e.name === "SyntaxError") {
                const error = new common_1.JSONSyntaxError(content, e);
                return teamsfx_api_1.err(error);
            }
            return teamsfx_api_1.err(new common_1.UnhandledError(e, "common"));
        }
    }
    async readJSONFile(filePath) {
        var _a;
        try {
            const res = await fs_extra_1.default.readJSON(filePath);
            return teamsfx_api_1.ok(res);
        }
        catch (e) {
            if (e.name === "SyntaxError") {
                const error = new common_1.JSONSyntaxError(filePath, e);
                return teamsfx_api_1.err(error);
            }
            else if ((_a = e.message) === null || _a === void 0 ? void 0 : _a.includes("no such file or directory")) {
                return teamsfx_api_1.err(new common_1.FileNotFoundError("common", filePath));
            }
            return teamsfx_api_1.err(new common_1.ReadFileError(e, "common"));
        }
    }
}
exports.JSONUtils = JSONUtils;
exports.jsonUtils = new JSONUtils();
//# sourceMappingURL=jsonUtils.js.map